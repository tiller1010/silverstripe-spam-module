name: Release Drafter

on:
  push:
    branches:
      - release/*

permissions:
  contents: read

jobs:
  update_release_draft:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@master
        with:
          fetch-depth: 0

      # Check if this is a release branch
      - name: Check For Release Branch
        id: is_release_branch
        run: |
          FILTEREDBRANCHNAME=$(git branch | grep "\* release")
          echo "::set-output name=filtered_branch_name::$FILTEREDBRANCHNAME"

      # Get the release tag
      - name: Get Release Tag
        id: get_release_tag
        if: steps.is_release_branch.outputs.filtered_branch_name != ''
        run: |
          RELEASETAG=$(git branch | grep \* | sed -re "s/release\///;s/\*//;s/\s*//g")
          echo "::set-output name=release_tag::$RELEASETAG"

      # Draft Release With Release Branch
      - name: Draft Release With Release Branch
        id: update_release_draft_with_release_branch
        if: steps.is_release_branch.outputs.filtered_branch_name != ''
        uses: tiller1010/release-drafter@master
        with:
          tag: ${{ steps.get_release_tag.outputs.release_tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Get the last tag created on this branch
      - name: Get Last Tag
        id: last_tag
        run: |
          LASTTAG=$(git describe --tags | sed -re "s/-.+//")
          echo "::set-output name=last_tag_on_branch::$LASTTAG"

      # Draft Release With Previous Tag
      - name: Draft Release With Previous Tag
        id: update_release_draft
        if: steps.is_release_branch.outputs.filtered_branch_name == ''
        uses: tiller1010/release-drafter@master
        with:
          last_tag: ${{ steps.last_tag.outputs.last_tag_on_branch }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
